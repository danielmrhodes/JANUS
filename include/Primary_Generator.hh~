#ifndef Primary_Generator_h
#define Primary_Generator_h 1

#include "G4VUserPrimaryGeneratorAction.hh"
#include "G4ParticleGun.hh"
#include "G4ParticleDefinition.hh"
#include "Reaction.hh"
#include "Primary_Generator_Messenger.hh"

class Primary_Generator_Messenger;

class Primary_Generator : public G4VUserPrimaryGeneratorAction {
  
public:
   
  Primary_Generator();
  ~Primary_Generator();

  enum MODE {Scattering,Source,Full};

  void SetBeamX(G4double X) {beam_X = X;}
  void SetBeamY(G4double Y) {beam_Y = Y;}
  void SetBeamAX(G4double AX) {beam_AX = AX;}
  void SetBeamAY(G4double AY) {beam_AY = AY;}
  void SetBeamEn(G4double En) {beam_En = En;}
  
  void SetSigmaX(G4double sigX) {sigma_X = sigX;}
  void SetSigmaY(G4double sigY) {sigma_Y = sigY;}
  void SetSigmaAX(G4double sigAX) {sigma_AX = sigAX;}
  void SetSigmaAY(G4double sigAY) {sigma_AY = sigAY;}
  void SetSigmaEn(G4double sigE) {sigma_En = sigE;}

  void SetSourceEnergy(G4double En) {source_En = En;}

  void SetMode(G4String md);
  MODE GetMode() {return mode;}

  G4String GetProjectileName() {return beam_def->GetParticleName();}
  G4String GetRecoilName() {return recoil_def->GetParticleName();}
  
  void Update();
  void GeneratePrimaries(G4Event* evt);
  
private:
  
  Primary_Generator_Messenger* messenger;

  MODE mode;
  
  G4ParticleGun* gun;
  Reaction* reac;

  G4ParticleDefinition* beam_def;
  G4ParticleDefinition* recoil_def;

  G4double beam_X; //X position of beam
  G4double beam_Y; //Y position of beam
  G4double beam_AX; //X angle of beam
  G4double beam_AY; //Y angle of beam
  G4double beam_En; //Kinetic energy of beam

  G4double sigma_X;  //spread in X position
  G4double sigma_Y;  //spread in Y position
  G4double sigma_AX; //spread in angle about X axis
  G4double sigma_AY; //spread in angle about Y axis
  G4double sigma_En; //spread in energy

  G4double source_En; //Energy of source gamma 
  
};

#endif
